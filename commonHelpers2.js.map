{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n/**\n * Возвращает обещание с искусственной задержкой.\n * @param {number} ms - Время задержки в миллисекундах.\n * @param {string} promiseType - Тип обещания ('fulfilled' или 'rejected').\n * @returns {Promise<string>} - Обещание, которое выполнится с заданным сообщением.\n */\nconst getArtificialDelayPromise = (ms, promiseType) => {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      promiseType === 'fulfilled'\n        ? res(`Fulfilled promise in ${ms}ms`)\n        : rej(`Rejected promise in ${ms}ms`);\n    }, ms);\n  });\n};\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const currentForm = e.currentTarget;\n  const { delayMs, promiseType } = currentForm.elements;\n  const ms = Number(delayMs.value);\n\n  getArtificialDelayPromise(ms, promiseType.value)\n    .then(message => iziToast.success({ message }))\n    .catch(message => iziToast.error({ message }));\n\n  currentForm.reset();\n});\n"],"names":["getArtificialDelayPromise","ms","promiseType","res","rej","form","currentForm","delayMs","message","iziToast"],"mappings":"mIASA,MAAMA,EAA4B,CAACC,EAAIC,IAC9B,IAAI,QAAQ,CAACC,EAAKC,IAAQ,CAC/B,WAAW,IAAM,CACfF,IAAgB,YACZC,EAAI,wBAAwBF,CAAE,IAAI,EAClCG,EAAI,uBAAuBH,CAAE,IAAI,CACtC,EAAEA,CAAE,CACT,CAAG,EAGGI,EAAO,SAAS,cAAc,OAAO,EAE3CA,EAAK,iBAAiB,SAAU,GAAK,CACnC,EAAE,eAAc,EAEhB,MAAMC,EAAc,EAAE,cAChB,CAAE,QAAAC,EAAS,YAAAL,GAAgBI,EAAY,SACvCL,EAAK,OAAOM,EAAQ,KAAK,EAE/BP,EAA0BC,EAAIC,EAAY,KAAK,EAC5C,KAAKM,GAAWC,EAAS,QAAQ,CAAE,QAAAD,CAAS,CAAA,CAAC,EAC7C,MAAMA,GAAWC,EAAS,MAAM,CAAE,QAAAD,CAAS,CAAA,CAAC,EAE/CF,EAAY,MAAK,CACnB,CAAC"}